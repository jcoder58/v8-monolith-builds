name: Build V8 Monolithic Static Library for Windows

# Disable build on push/pulll
on:
#  push:
#    branches:
#      - main
  
#  pull_request:
#    branches:
#      - main
  
  workflow_dispatch:
    inputs:
      version:
        description: V8 Version
        required: false
        
jobs:
  build:
    name: ${{ matrix.config.name }}_${{ matrix.config.arch }}
    if: "!startsWith(github.event.head_commit.message, '[Skip]')"
    runs-on: windows-latest
    
    strategy:
      matrix:
        config:
          - os: windows-latest
            name: windows
            arch: x64
            lib_name: v8_monolith.lib
    env:
      DEPOT_TOOLS_WIN_TOOLCHAIN: 0

    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      
      - name: Install MSVC/MCBuild (Windows)
        uses: microsoft/setup-msbuild@v1.1

      - name: Get depot tools
        id: version
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri https://storage.googleapis.com/chrome-infra/depot_tools.zip -OutFile depot_tools.zip
          Expand-Archive depot_tools.zip ./depot_tools
          echo "$pwd/depot_tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          
      - name: Checkout V8 source
        run: |
          gclient
          fetch v8
          cd v8
          git checkout ${{ env.V8_VERSION }}
          gclient sync

      - name: Build V8
        shell: pwsh
        run: |
          Set-Location -Path v8
          python tools/dev/v8gen.py ${{ matrix.config.arch }}.release
          Copy-Item "../platforms/${{ matrix.config.name }}_${{ matrix.config.arch }}/args.gn" -Destination "./out.gn/${{ matrix.config.arch }}.release/args.gn" -force
          gn gen out.gn/${{ matrix.config.arch }}.release
          Get-Content ./out.gn/${{ matrix.config.arch }}.release/args.gn | Write-Output
          ninja -C out.gn/${{ matrix.config.arch }}.release
      
      - name: Prepare out directory
        shell: pwsh
        run: |
          New-Item -ItemType directory -Path ./out/
          Copy-Item -Path ./v8/out.gn/x64.release/obj/${{ matrix.config.lib_name }} -Destination ./out/${{ matrix.config.name }}_${{ matrix.config.arch }}_${{ matrix.config.lib_name }}
          If ($IsLinux -or $IsMacOS) { Copy-Item -Path ./v8/out.gn/x64.release/d8 -Destination ./out/${{ matrix.config.name }}_${{ matrix.config.arch }}_d8 }
          If ($IsWindows) { Copy-Item -Path ./v8/out.gn/x64.release/d8.exe -Destination ./out/${{ matrix.config.name }}_${{ matrix.config.arch }}_d8.exe }
      
      - name: Release monolithic V8 lib & d8
        uses: softprops/action-gh-release@v1
        with:
          files: ./out/*
          name: V8 Release ${{ env.V8_VERSION }}
          tag_name: v${{ env.V8_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
